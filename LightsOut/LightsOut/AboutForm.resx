<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>